name: Build and publish Docker image to GHCR

on:
  push:
    branches:
      - "main"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  USER_NAME: ${{ secrets.USER_NAME }}
  NODE_VERSION: 21
  DOTNET_VERSION: "9.0.x"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore
        working-directory: src

      - name: Build
        run: dotnet build --configuration Release --no-restore -o=publish
        working-directory: src

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Node.js dependencies
        run: npm install -f
        working-directory: ./

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: npx semantic-release --debug
        continue-on-error: true
        working-directory: ./

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Extract version from semantic-release output
        id: get_version
        run: |
          echo "Extracting version from semantic-release output..."
          if [ -z "${{ steps.semantic_release.outputs.nextRelease }}" ]; then
            echo "No release detected by semantic-release."
            exit 0
          fi
          VERSION=$(jq -r '.nextRelease.version' <<< "${{ steps.semantic_release.outputs.nextRelease }}")
          if [ -z "$VERSION" ]; then
            echo "Failed to extract version."
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Check extracted version
        if: success() && steps.get_version.outputs.VERSION
        run: echo "VERSION is ${{ env.VERSION }}"

      - name: Convert repository owner to lowercase
        id: lowercase_owner
        run: |
          LOWERCASE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          echo "LOWERCASE_OWNER=$LOWERCASE_OWNER" >> $GITHUB_ENV
          echo "Converted repository owner: $LOWERCASE_OWNER"

      - name: Build and push Docker image
        if: success() && steps.get_version.outputs.VERSION
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: ghcr.io/${{ env.LOWERCASE_OWNER }}/catalog:${{ env.VERSION }}
